@ngdoc overview
@name Guide
@description

# ng.cl.prevent-nav

[![Build Status: Linux](http://img.shields.io/travis/cork-labs/ng.cl.prevent-nav/master.svg?style=flat-square)](https://travis-ci.org/cork-labs/ng.cl.prevent-nav)
[![Bower version](http://img.shields.io/bower/v/ng.cl.prevent-nav.svg?style=flat-square)](https://github.com/cork-labs/ng.cl.prevent-nav)

> Provides a service to centrally manage interceptors for $locationChangeStart and $window.onbeforeunload.


## Getting Started

Add **ng.cl.prevent-nav** to you project.

Via bower:

```
$ bower install --save ng.cl.prevent-nav
```

Include the following JS files in your build:
- `dist/ng.cl.prevent-nav.js` OR `dist/ng.cl.prevent-nav.min.js`


## Quick Guide

### Preventing navigation

The `ng.cl.prevent-nav` module provides a method to register check functions to enable/disable navigation, allowing
decoupled components to delegate this responsibility to this service.

When at least one of this checks is returning `false`, navigation is suspended, i.e., all
[$locationChangeStart](https://docs.angularjs.org/api/ng/service/$location#$locationChangeStart) events will immediately
be cancelled.

```
clPreventNav.addInterceptor(function () {
    return $scope.form.$pristine;
});
```

Read [Preventing Navigation](#/guide/00_preventing) for a more complete explanation or check the [Demos](#/demos) to see
it in action.


### Resuming the cancelled navigation

The interceptors can also register a `handleFn` function to to act upon a cancelled navigation. Typically, an app will
show a dialog to the user prompting to confirm the navigation and warning of the consequences of such.

```
var removeInterceptor = clPreventNav.addInterceptor(function () {
    return $scope.form.$pristine;
}, function () {
    // assuming dialog.show() returns a promise resolved when the user confirms the dialog, rejected if he cancels
    return dialog.show('Do you want to navigate? All your changes will be lost!');
});
```

Read [Resuming Navigation](#/guide/10_resuming) for a detailed explanation.


### Handling forced navigation (window close, history, etc...)

Finally, whenever at least one of the checks is returning `false` the service binds the `window.onbeforeunload` event.

This gives the user the chance to cancel accidental navigation (ex: when refreshing the page, using the back button or
modifying the URL directly in the browser address bar).

```
clPreventNav.addInterceptor(function () {
    return $scope.form.$pristine;
}, angular.noop, 'All the changes will be lost!');
```

Read more about [onbeforeunload](#/guide/20_onbeforeunload).


### Configuring the service.

The service is configurable via the [clPreventNavProvider](#/api/ng.cl.prevent-nav.clPreventNavProvider).

It allows you to set the dialog message header and default warnings:

```
clPreventNavProvider.configure({
    msgPrefix: ' * '
});
```

Make sure you check all the [configuration settings](#/guide/30_configuration).


## Contributing

We'd love for you to contribute to our source code and to make it even better than it is today!

Make sure you read the [Contributing Guide](https://github.com/cork-labs/ng.cl.prevent-nav/blob/master/CONTRIBUTING.md) first.


## Developing

Clone this repository, install the dependencies and simply run `grunt develop`.

```
$ npm install -g grunt-cli bower
$ npm install
$ bower install
$ ./bootstrap.sh
$ grunt develop
```

At this point, the source examples included were built into the `build/` directory and a simple webserver is launched so
that you can browse the documentation, the examples and the code coverage.

```
...
Running "serve:build" (serve) task
Started connect web server on http://0.0.0.0:8000

Running "watch" task
Waiting...
```

More info on the (Grunt based) tools can be found in the
[boilerplate documentation](http://jarvis.cork-labs.org/boilerplate-nglib/current/docs).


## Authors

**Andre Torgal (andrezero)**
+ <https://twitter.com/andrezero>
+ <https://github.com/andrezero>


## MIT License

[Copyright (c) 2015 Cork Labs](http://cork-labs.mit-license.org/2015)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
