@ngdoc overview
@name Preventing Navitagion
@description

## Preventing Navitagion

In this example we will add a couple of interceptors from different, unrelated, parts of the app.

As you can see, whenever at least of these interceptors is returning `false` navigation is always cancelled.

Also, try refreshing the page when navigation is disabled. You'll get a [`window.onbeforeunload`](#/guide/onbeforeunload)
browser confirmation.

You can also query for the `prevented` state to act accordingly in your views, like disabling some navigation
elements.

<doc:example module="exampleApp" height="350">
    <doc:source>
        <script>
            angular.module('exampleApp', ['ngRoute', 'ng.cork.prevent-nav'])
            .config(['$locationProvider', '$routeProvider', function ($locationProvider, $routeProvider) {
                //$locationProvider.html5Mode(false);
                $routeProvider.when('/foo', {
                    controller: 'fooCtrl',
                    template: '<h3>Foo</h3>'
                });
                $routeProvider.when('/bar', {
                    controller: 'barCtrl',
                    template: '<h3>Bar</h3><form class="form-group" name="form"><input type="text" class="form-control" ng-model="name"><button class="btn btn-default" ng-click="save()">save</button></form>'
                });
            }])
            .controller('exampleCtrl', ['$scope', '$location', 'corkPreventNav', function ($scope, $location, corkPreventNav) {
                $scope.nav = corkPreventNav;
                $scope.disable = false;
                $scope.goFoo = function () {
                    $location.path('/foo');
                }
                $scope.goBar = function () {
                    $location.path('/bar', {id: $scope.id});
                }
                var removeInterceptor = corkPreventNav.addInterceptor(function () {
                    return !$scope.disable;
                }, null, 'Some other thing will happen.');
                $scope.$on('$destroy', removeInterceptor);
            }])
            .controller('fooCtrl', ['$scope', 'corkPreventNav', function ($scope, corkPreventNav) {
                // ... controller code
            }])
            .controller('barCtrl', ['$scope', 'corkPreventNav', function ($scope, corkPreventNav) {
                $scope.name = 'modify me';
                var removeInterceptor = corkPreventNav.addInterceptor(function () {
                    return $scope.form.$pristine;
                }, null, 'Changes to your form will be lost.');
                $scope.save = function () {
                    $scope.form.$setPristine();
                    $scope.name = 'modify me again ;-)';
                }
                $scope.$on('$destroy', removeInterceptor);
            }]);
        </script>
        <style>
            .container {
                padding: 10px;
            }
            h3 {
                margin-top: 0;
            }
            input[type="text"] {
                float :left;
                width: 80%;
            }
        </style>
        <div data-ng-controller="exampleCtrl" class="container form-group">
            <p class="form-group">
                Go to route <button class="btn btn-default" ng-click="goFoo()">/foo</button>
                Go to route <button class="btn btn-default" ng-click="goBar()">/bar</button>
            </p>
            <p class="checkbox"><label><input type="checkbox" ng-model="disable">Disable navigation</label></p>
            <div ng-view class="well"></div>
            <p class="well">Navigation is currently: {{nav.prevented ? 'prevented' : 'not prevented'}}</p>
        </div>
    </doc:source>
</doc:example>
